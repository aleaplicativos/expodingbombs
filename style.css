@charset "UTF-8";
body {
  background-color: #00C852;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

details > summary {
  list-style: none;
}

details > summary::-webkit-details-marker {
  display: none;
}

.top-icon, .bottom-icon {
  width: var(--size);
  height: var(--size);
  position: absolute;
}
.top-icon > summary:before, .top-icon > summary:after, .bottom-icon > summary:before, .bottom-icon > summary:after {
  font-size: calc(var(--size) - 1vmin);
  text-shadow: calc(var(--size) / 15) calc(var(--size) / 15) calc(var(--size) / 5) rgba(0, 0, 0, 0.5);
  width: var(--size);
  height: var(--size);
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
}

.top-icon-trigger, .bottom-icon-trigger {
  width: 100%;
  height: 100%;
  outline: none;
  position: absolute;
  top: 0;
  left: 0;
}
.top-icon-trigger:before, .top-icon-trigger:after, .bottom-icon-trigger:before, .bottom-icon-trigger:after {
  transition: opacity 220ms ease-out;
}

.top-icon {
  top: calc(var(--top) - calc(var(--size) / 2));
  left: calc(var(--left) - calc(var(--size) / 2));
}
.top-icon .top-icon-trigger:before {
  content: "üí£";
  opacity: 1;
}
.top-icon .top-icon-trigger:after {
  content: "üí•";
  opacity: 0;
}
.top-icon[open] .top-icon-trigger:before {
  opacity: 0;
}
.top-icon[open] .top-icon-trigger:after {
  opacity: 1;
  animation: animate-size 220ms ease-out forwards;
}

.bottom-icon {
  top: calc(50% - calc(var(--size) / 2));
  left: calc(50% - calc(var(--size) / 2));
  animation: move-distance var(--time) ease-out forwards;
}
.bottom-icon .bottom-icon-trigger:before {
  content: "üç¨";
  opacity: 1;
}
.bottom-icon .bottom-icon-trigger:after {
  content: "üç≠";
  opacity: 0;
}
.bottom-icon[open] .bottom-icon-trigger:before {
  opacity: 0;
}
.bottom-icon[open] .bottom-icon-trigger:after {
  opacity: 1;
  animation: animate-size 220ms ease-out forwards;
}

@keyframes animate-size {
  0% {
    transform: scale(0);
  }
  40% {
    transform: scale(1.25);
  }
  60% {
    transform: scale(0.85);
  }
  80% {
    transform: scale(1.075);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes move-distance {
  0% {
    opacity: 0;
    transform: translateX(0) translateY(0) scale(0);
  }
  100% {
    opacity: 1;
    transform: translateX(var(--x)) translateY(var(--y)) scale(1);
  }
}